---------------------------------------------------------------------------

by mickaelandrieu at 2015-09-21T15:26:10Z

:+1:  this is realy useful

---------------------------------------------------------------------------

by theofidry at 2015-09-21T18:30:26Z

:+1:

---------------------------------------------------------------------------

by dbu at 2015-09-21T18:52:53Z

what about the doctrine variants (mongo, phpcr)? can they provide their own extractor in their symfony bundle?

---------------------------------------------------------------------------

by dunglas at 2015-09-21T19:40:19Z

@dbu IMO it could even be added directly in the Doctrine bridge.

---------------------------------------------------------------------------

by fabpot at 2015-09-22T11:23:12Z

Can you rebase to get rid of all the merge commits that we don't want to keep when merging?

---------------------------------------------------------------------------

by fabpot at 2015-09-22T11:23:25Z

LGTM

---------------------------------------------------------------------------

by stof at 2015-09-22T11:28:47Z

before the merge here, I would like to see the documentation PR being opened, which will help us see how this component is mean to be used (as we will be able to read the documentation)

---------------------------------------------------------------------------

by dunglas at 2015-09-22T16:09:43Z

@stof doc added
@fabpot CS and license fixed. Rebasing is a pain because of all files in common at the root in old versions. If merge commits are really a problem, IMO the best is to get rid of the history. But maybe some Git gurus here know a solution to avoid all those rebasing conflicts.

---------------------------------------------------------------------------

by dunglas at 2015-09-22T19:47:25Z

The AppVeyor error is unrelated.

---------------------------------------------------------------------------

by fabpot at 2015-09-23T09:32:12Z

@fabpot I can still see some licenses that should be fixed. Regarding the history, external contributions are minimal, so loosing the history should not be a problem; especially because there are a lot of noise in there (including the Hack patch that was later reverted).

---------------------------------------------------------------------------

by dunglas at 2015-09-23T11:48:43Z

@fabpot everything should be OK now. Errors are not related to this PR.

---------------------------------------------------------------------------

by fabpot at 2015-09-23T12:34:09Z

:+1:

---------------------------------------------------------------------------

by fabpot at 2015-09-24T11:35:57Z

ping @symfony/deciders

---------------------------------------------------------------------------

by derrabus at 2015-09-24T13:02:13Z

Let's test this Carson thingyâ€¦

Status: Reviewed

---------------------------------------------------------------------------

by derrabus at 2015-09-24T13:02:29Z

:tada:

---------------------------------------------------------------------------

by OskarStark at 2015-09-24T13:11:49Z

@carsonbot ...

Status: Reviewed

---------------------------------------------------------------------------

by dunglas at 2015-09-24T17:23:10Z

Issues raised by @derrabus and @OskarStark fixed.

---------------------------------------------------------------------------

by fabpot at 2015-09-25T06:41:29Z

Reading the documentation, here are some thoughts:

* The `PropertyInfo` class name is confusing; it looks like a class that represents a single property;

* About the constructor arguments of `PropertyInfo`: Would it be easier for end users to pass one list of extractors (they would all implement an empty marker interface) and then, depending on the interfaces they implements, we can easily separate them into 4 buckets. The only drawbacks I can see is if the ordering would be different depending on the interface they implement but I doubt it's the case.

---------------------------------------------------------------------------

by dunglas at 2015-09-25T06:55:55Z

* Do you have a suggestion for a better name? What do you think about `PropertyInfoExtractor`?
* The ordering matters and it's exactly why arguments they are one argument by type. The first implementation was exactly like you describe but when developing API Platform I found the following particular use case: list of properties must be extracted using reflection but type with the Doctrine extractor and it's not possible without segregating the arguments. IMO it's not a big deal from developper POV because the component will be exposed as a service (I'll provide a PR when this one will be merged) in the full stack framework. Developers using the standalone component probably have enough background to understand the ordering issue.

---------------------------------------------------------------------------

by dunglas at 2015-09-25T09:41:25Z

Another solution for the number of arguments: the constructor as is but provide a factory method with only one parameter (the `array` of extractors) doing the segregation.

It looks overkill for such a low level component but I can add it if you think it's better in term of DX.

---------------------------------------------------------------------------

by fabpot at 2015-09-25T10:07:27Z

`PropertyInfoExtractor` sounds good to me.
As the ordering matters, let's keep the current constructor as is.

---------------------------------------------------------------------------

by dunglas at 2015-09-25T12:14:43Z

Class and interfaces renamed accordingly.

---------------------------------------------------------------------------

by fabpot at 2015-09-25T12:22:37Z

:+1:
