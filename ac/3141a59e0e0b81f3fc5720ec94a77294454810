---------------------------------------------------------------------------

by carsonbot at 2023-12-11T17:16:25Z

Hey!

I see that this is your first PR. That is great! Welcome!

Symfony has a [contribution guide](https://symfony.com/doc/current/contributing/index.html) which I suggest you to read.

In short:
- Always add tests
- Keep backward compatibility (see https://symfony.com/bc).
- Bug fixes must be submitted against the lowest maintained branch where they apply (see https://symfony.com/releases)
- Features and deprecations must be submitted against the 7.1 branch.

Review the GitHub status checks of your pull request and try to solve the reported issues. If some tests are failing, try to see if they are failing because of this change.

When two Symfony core team members approve this change, it will be merged and you will become an official Symfony contributor!
If this PR is merged in a lower version branch, it will be merged up to all maintained branches within a few days.

I am going to sit back now and wait for the reviews.

Cheers!

Carsonbot

---------------------------------------------------------------------------

by OskarStark at 2023-12-12T10:07:32Z

Hi, thanks for the PR, as this is a new feature, please target 7.1

---------------------------------------------------------------------------

by rdavaillaud at 2023-12-12T10:21:57Z

> Hi, thanks for the PR, as this is a new feature, please target 7.1

Is it really a new feature or an oversight?
The [Notifier component documentation](https://symfony.com/doc/current/notifier.html#using-events) tells us that the transport use Event to interact in the lifecycle of the event

> The [Transport](https://github.com/symfony/symfony/blob/7.0/src/Symfony/Component/Notifier/Transport.php) class of the Notifier component allows you to optionally hook into the lifecycle via events.

Currently, the hooks aren't working with the FakeSms/FakeChat and Mercure as they should.

---------------------------------------------------------------------------

by OskarStark at 2023-12-12T10:24:04Z

Not sure, from a technical POV it is a new feature, because they were never meant to dispatch those events, but I can understand your point.

cc @nicolas-grekas

---------------------------------------------------------------------------

by rdavaillaud at 2023-12-15T09:25:27Z

I will give some argument in favour of a bugfix :grin:

Those transports (at least the Fake* ones) are intended to be used in dev/test, but we cannot test the events behaviours, and it is not documented that they don't support those events.

Technically, the transports class **does** have everything to support the dispatch of those events, they correctly extends the AbstractTransport class and call the extended class constructor passing the two HttpClient and EventDispatcher argument.

The factories, in the other hand, don't handle the extended AbstractTransportFactory class constructor arguments. As all the other factories don't override the constructor, there is no precedent.
As those 3 specific ones need to override the constructor, I see no point not to pass them.

@fabpot , as you are the designer of the component and in order to determine if this is bug since 5.3 or a new feature for 7.x., do you have an opinion on that : does every TransportFactory need to pass EventDispatcher and HttpClient ?

I will target whichever you finally decide, tell me.
