---------------------------------------------------------------------------

by kbond at 2021-11-05T01:10:02Z

> I think we'll also need to filter out any built-in types from union types, and to order the list of types for both union and intersection types.
We could do this in AutowirePass, when TypedReference are wired

Sorry, I'm quite out of my element here. I'm not sure how/where to do this.

---------------------------------------------------------------------------

by nicolas-grekas at 2021-11-05T11:02:27Z

Using pseudo-code, this is what is missing to me:

```diff
--- a/src/Symfony/Component/DependencyInjection/Compiler/AutowirePass.php
+++ b/src/Symfony/Component/DependencyInjection/Compiler/AutowirePass.php
@@ -100,7 +100,7 @@ class AutowirePass extends AbstractRecursivePass
     private function doProcessValue(mixed $value, bool $isRoot = false): mixed
     {
         if ($value instanceof TypedReference) {
-            if ($ref = $this->getAutowiredReference($value)) {
+            if ($ref = $this->getAutowiredReference($value, true)) {
                 return $ref;
             }
             if (ContainerBuilder::RUNTIME_EXCEPTION_ON_INVALID_REFERENCE === $value->getInvalidBehavior()) {
@@ -291,7 +291,7 @@ class AutowirePass extends AbstractRecursivePass
             }

             $getValue = function () use ($type, $parameter, $class, $method) {
-                if (!$value = $this->getAutowiredReference($ref = new TypedReference($type, $type, ContainerBuilder::EXCEPTION_ON_INVALID_REFERENCE, Target::parseName($parameter)))) {
+                if (!$value = $this->getAutowiredReference($ref = new TypedReference($type, $type, ContainerBuilder::EXCEPTION_ON_INVALID_REFERENCE, Target::parseName($parameter)), false)) {
                     $failureMessage = $this->createTypeNotFoundMessageCallback($ref, sprintf('argument "$%s" of method "%s()"', $parameter->name, $class !== $this->currentId ? $class.'::'.$method : $method));

                     if ($parameter->isDefaultValueAvailable()) {
@@ -346,7 +346,7 @@ class AutowirePass extends AbstractRecursivePass
     /**
      * Returns a reference to the service matching the given type, if any.
      */
-    private function getAutowiredReference(TypedReference $reference): ?TypedReference
+    private function getAutowiredReference(TypedReference $reference, bool $filterType): ?TypedReference
     {
         $this->lastFailure = null;
         $type = $reference->getType();
@@ -355,6 +355,13 @@ class AutowirePass extends AbstractRecursivePass
             return $reference;
         }

+        if ($filterType) {
+            if (is_union_type($type)) {
+                $type = remove_builtin_types($types);
+            }
+            $types = sort_types_in_union_or_intersection($types);
+        }
+
         if (null !== $name = $reference->getName()) {
```

---------------------------------------------------------------------------

by nicolas-grekas at 2021-11-05T11:10:02Z

And we'll also need a change on this line, since the leading `\` will be missing in union/intersect lists:
https://github.com/symfony/symfony/blob/d7ea3de1e34d9a641e6a1dbd5d4437c1fcc25da3/src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php#L1757

Adding `str_replace(['|', '&'], ['|\\', '&\\'], ...)` around the call to `getType()` should do it.

---------------------------------------------------------------------------

by kbond at 2021-11-05T13:18:45Z

Thank you, I've added the requested code. Still not sure how to test this.
