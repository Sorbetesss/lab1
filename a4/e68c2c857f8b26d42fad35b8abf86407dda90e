---------------------------------------------------------------------------

by carsonbot at 2022-08-02T12:58:27Z

Hey!

I see that this is your first PR. That is great! Welcome!

Symfony has a [contribution guide](https://symfony.com/doc/current/contributing/index.html) which I suggest you to read.

In short:
- Always add tests
- Keep backward compatibility (see https://symfony.com/bc).
- Bug fixes must be submitted against the lowest maintained branch where they apply (see https://symfony.com/releases)
- Features and deprecations must be submitted against the 6.2 branch.

Review the GitHub status checks of your pull request and try to solve the reported issues. If some tests are failing, try to see if they are failing because of this change.

When two Symfony core team members approve this change, it will be merged and you will become an official Symfony contributor!
If this PR is merged in a lower version branch, it will be merged up to all maintained branches within a few days.

I am going to sit back now and wait for the reviews.

Cheers!

Carsonbot

---------------------------------------------------------------------------

by nicolas-grekas at 2022-08-02T13:02:12Z

Just keep the call to `mb_detect_encoding` but please add two more arguments to it: `null, true`.

---------------------------------------------------------------------------

by HellFirePvP at 2022-08-02T13:21:27Z

I will split off the removal of `mb_` sensitive string operations into a different PR and link it here as it's not directly connected to the original issue.

---------------------------------------------------------------------------

by nicolas-grekas at 2022-08-02T13:24:45Z

But the original issue is caused by these useless calls to mb_ so this topic cannot be split in two PRs (merging this PR as is doesn't make sense since it only builds on a preexisting mistake).

---------------------------------------------------------------------------

by HellFirePvP at 2022-08-02T13:45:04Z

As mentioned, mb operations were left in for lowercasing as character lowercasing might differ from internal language lowercasing strategy.
Removed the `$encoding` parameter from strtolower as it does not have a 2nd parameter.
