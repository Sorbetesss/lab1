---------------------------------------------------------------------------

by carsonbot at 2022-05-05T13:08:24Z

Hey!

I see that this is your first PR. That is great! Welcome!

Symfony has a [contribution guide](https://symfony.com/doc/current/contributing/index.html) which I suggest you to read.

In short:
- Always add tests
- Keep backward compatibility (see https://symfony.com/bc).
- Bug fixes must be submitted against the lowest maintained branch where they apply (see https://symfony.com/releases)
- Features and deprecations must be submitted against the 6.1 branch.

Review the GitHub status checks of your pull request and try to solve the reported issues. If some tests are failing, try to see if they are failing because of this change.

When two Symfony core team members approve this change, it will be merged and you will become an official Symfony contributor!
If this PR is merged in a lower version branch, it will be merged up to all maintained branches within a few days.

I am going to sit back now and wait for the reviews.

Cheers!

Carsonbot

---------------------------------------------------------------------------

by chalasr at 2022-05-05T13:11:05Z

Works for me as a bugfix. Can you please add a test case that fails without your patch to prevent regressions?

---------------------------------------------------------------------------

by jnoordsij at 2022-05-05T13:33:50Z

Done! Also I got slightly confused by the allowed mode combinations on both `InputArgument` and `InputOption`, as for example combining the optional and required modes is currently allowed, but might lead to some unexpected/inconsistent behavior.

I'm willing to look into refactoring things and adding some additional validations, but this might be more of a problem with backwards compatibility, so maybe it is better to point such changes at `6.1`?

---------------------------------------------------------------------------

by chalasr at 2022-05-05T14:50:51Z

Yes BC is especially important here, please do separate PRs/discussions for each bug-ish case. In the past, we have been merging bug fixes that turned into harmful BC breaks on this part of the code, which we had to revert.
