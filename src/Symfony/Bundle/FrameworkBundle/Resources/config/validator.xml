<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="validator.class">Symfony\Component\Validator\Validator</parameter>
        <parameter key="validator.validator_factory.class">Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory</parameter>

        <parameter key="validator.metadata.xml_driver.class">Symfony\Component\Validator\Metadata\Driver\XmlDriver</parameter>
        <parameter key="validator.metadata.yaml_driver.class">Symfony\Component\Validator\Metadata\Driver\YamlDriver</parameter>
        <parameter key="validator.metadata.static_method_driver.class">Symfony\Component\Validator\Metadata\Driver\StaticMethodDriver</parameter>
        <parameter key="validator.metadata.file_locator.class">Symfony\Component\Validator\Metadata\Driver\FileLocator</parameter>
        <parameter key="validator.metadata.lazy_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
        <parameter key="validator.metadata.driver_chain.class">Metadata\Driver\DriverChain</parameter>
        <parameter key="validator.metadata.factory.class">Metadata\MetadataFactory</parameter>
        <parameter key="validator.metadata.cache.file_cache.class">Metadata\Cache\FileCache</parameter>
    </parameters>

    <services>
        <service id="validator.validator_factory" class="%validator.validator_factory.class%" public="false">
            <argument type="service" id="service_container" />
            <argument type="collection" />
        </service>

        <service id="validator" class="%validator.class%">
            <argument type="service" id="validator.metadata.factory" />
            <argument type="service" id="validator.validator_factory" />
            <argument type="collection" />
        </service>

        <!-- Metadata -->
        <service id="validator.metadata.file_locator" class="%validator.metadata.file_locator.class%">
            <argument type="collection" />
        </service>

        <service id="validator.metadata.xml_driver" class="%validator.metadata.xml_driver.class%">
            <argument type="service" id="validator.metadata.file_locator" />
        </service>

        <service id="validator.metadata.yaml_driver" class="%validator.metadata.yaml_driver.class%">
            <argument type="service" id="validator.metadata.file_locator" />
        </service>

        <service id="validator.metadata.static_method_driver" class="%validator.metadata.static_method_driver.class%" />

        <service id="validator.metadata.lazy_driver" class="%validator.metadata.lazy_driver.class%">
            <argument type="service" id="service_container" />
            <argument>validator.metadata.driver_chain</argument>
        </service>

        <service id="validator.metadata.driver" alias="validator.metadata.driver_chain" />
        <service id="validator.metadata.driver_chain" class="%validator.metadata.driver_chain.class%">
            <argument type="collection">
                <argument type="service" id="validator.metadata.xml_driver" />
                <argument type="service" id="validator.metadata.yaml_driver" />
                <argument type="service" id="validator.metadata.static_method_driver" />
            </argument>
        </service>

        <service id="validator.metadata.cache.file_cache" class="%validator.metadata.cache.file_cache.class%">
            <argument />
        </service>

        <service id="validator.metadata.cache" alias="validator.metadata.cache.file_cache" />

        <service id="validator.metadata.factory" class="%validator.metadata.factory.class%">
            <argument type="service" id="validator.metadata.lazy_driver" />
            <argument>Metadata\ClassHierarchyMetadata</argument>
            <argument />
            <call method="setCache">
                <argument type="service" id="validator.metadata.cache" on-invalid="ignore" />
            </call>
        </service>
    </services>
</container>
