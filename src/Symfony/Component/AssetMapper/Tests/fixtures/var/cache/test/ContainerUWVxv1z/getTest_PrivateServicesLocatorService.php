<?php

namespace ContainerUWVxv1z;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getTest_PrivateServicesLocatorService extends Symfony_Component_AssetMapper_Tests_fixtures_AssetMapperTestAppKernelTestDebugContainer
{
    /**
     * Gets the public 'test.private_services_locator' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->services['test.private_services_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'logger' => ['privates', 'logger', 'getLoggerService', false],
            'argument_metadata_factory' => ['privates', 'argument_metadata_factory', 'getArgumentMetadataFactoryService', false],
            'argument_resolver.backed_enum_resolver' => ['privates', 'argument_resolver.backed_enum_resolver', 'getArgumentResolver_BackedEnumResolverService', true],
            'argument_resolver.datetime' => ['privates', 'argument_resolver.datetime', 'getArgumentResolver_DatetimeService', true],
            'argument_resolver.request_attribute' => ['privates', 'argument_resolver.request_attribute', 'getArgumentResolver_RequestAttributeService', true],
            'argument_resolver.request' => ['privates', 'argument_resolver.request', 'getArgumentResolver_RequestService', true],
            'argument_resolver.session' => ['privates', 'argument_resolver.session', 'getArgumentResolver_SessionService', true],
            'argument_resolver.service' => ['privates', 'argument_resolver.service', 'getArgumentResolver_ServiceService', true],
            'argument_resolver.default' => ['privates', 'argument_resolver.default', 'getArgumentResolver_DefaultService', true],
            'argument_resolver.variadic' => ['privates', 'argument_resolver.variadic', 'getArgumentResolver_VariadicService', true],
            'argument_resolver.query_parameter_value_resolver' => ['privates', 'argument_resolver.query_parameter_value_resolver', 'getArgumentResolver_QueryParameterValueResolverService', true],
            'response_listener' => ['privates', 'response_listener', 'getResponseListenerService', false],
            'locale_listener' => ['privates', 'locale_listener', 'getLocaleListenerService', false],
            'validate_request_listener' => ['privates', 'validate_request_listener', 'getValidateRequestListenerService', false],
            'disallow_search_engine_index_response_listener' => ['privates', 'disallow_search_engine_index_response_listener', 'getDisallowSearchEngineIndexResponseListenerService', false],
            'exception_listener' => ['privates', 'exception_listener', 'getExceptionListenerService', false],
            'controller.cache_attribute_listener' => ['privates', 'controller.cache_attribute_listener', 'getController_CacheAttributeListenerService', false],
            'cache_clearer' => ['privates', 'cache_clearer', 'getCacheClearerService', true],
            'filesystem' => ['privates', 'filesystem', 'getFilesystemService', true],
            'locale_aware_listener' => ['privates', 'locale_aware_listener', 'getLocaleAwareListenerService', false],
            'container.env_var_processor' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', true],
            'slugger' => ['privates', 'slugger', 'getSluggerService', true],
            'container.getenv' => ['privates', 'container.getenv', 'getContainer_GetenvService', true],
            'config_builder.warmer' => ['privates', 'config_builder.warmer', 'getConfigBuilder_WarmerService', true],
            'clock' => ['privates', 'clock', 'getClockService', true],
            'error_handler.error_renderer.html' => ['privates', 'error_handler.error_renderer.html', 'getErrorHandler_ErrorRenderer_HtmlService', true],
            'console.error_listener' => ['privates', 'console.error_listener', 'getConsole_ErrorListenerService', true],
            'console.suggest_missing_package_subscriber' => ['privates', 'console.suggest_missing_package_subscriber', 'getConsole_SuggestMissingPackageSubscriberService', true],
            'console.command.about' => ['privates', 'console.command.about', 'getConsole_Command_AboutService', true],
            'console.command.assets_install' => ['privates', 'console.command.assets_install', 'getConsole_Command_AssetsInstallService', true],
            'console.command.cache_clear' => ['privates', 'console.command.cache_clear', 'getConsole_Command_CacheClearService', true],
            'console.command.cache_pool_clear' => ['privates', 'console.command.cache_pool_clear', 'getConsole_Command_CachePoolClearService', true],
            'console.command.cache_pool_prune' => ['privates', 'console.command.cache_pool_prune', 'getConsole_Command_CachePoolPruneService', true],
            'console.command.cache_pool_invalidate_tags' => ['privates', 'console.command.cache_pool_invalidate_tags', 'getConsole_Command_CachePoolInvalidateTagsService', true],
            'console.command.cache_pool_delete' => ['privates', 'console.command.cache_pool_delete', 'getConsole_Command_CachePoolDeleteService', true],
            'console.command.cache_pool_list' => ['privates', 'console.command.cache_pool_list', 'getConsole_Command_CachePoolListService', true],
            'console.command.cache_warmup' => ['privates', 'console.command.cache_warmup', 'getConsole_Command_CacheWarmupService', true],
            'console.command.config_debug' => ['privates', 'console.command.config_debug', 'getConsole_Command_ConfigDebugService', true],
            'console.command.config_dump_reference' => ['privates', 'console.command.config_dump_reference', 'getConsole_Command_ConfigDumpReferenceService', true],
            'console.command.container_debug' => ['privates', 'console.command.container_debug', 'getConsole_Command_ContainerDebugService', true],
            'console.command.container_lint' => ['privates', 'console.command.container_lint', 'getConsole_Command_ContainerLintService', true],
            'console.command.debug_autowiring' => ['privates', 'console.command.debug_autowiring', 'getConsole_Command_DebugAutowiringService', true],
            'console.command.dotenv_debug' => ['privates', 'console.command.dotenv_debug', 'getConsole_Command_DotenvDebugService', true],
            'console.command.event_dispatcher_debug' => ['privates', 'console.command.event_dispatcher_debug', 'getConsole_Command_EventDispatcherDebugService', true],
            'console.command.xliff_lint' => ['privates', 'console.command.xliff_lint', 'getConsole_Command_XliffLintService', true],
            'console.command.yaml_lint' => ['privates', 'console.command.yaml_lint', 'getConsole_Command_YamlLintService', true],
            'console.command.secrets_set' => ['privates', 'console.command.secrets_set', 'getConsole_Command_SecretsSetService', true],
            'console.command.secrets_remove' => ['privates', 'console.command.secrets_remove', 'getConsole_Command_SecretsRemoveService', true],
            'console.command.secrets_generate_key' => ['privates', 'console.command.secrets_generate_key', 'getConsole_Command_SecretsGenerateKeyService', true],
            'console.command.secrets_list' => ['privates', 'console.command.secrets_list', 'getConsole_Command_SecretsListService', true],
            'console.command.secrets_decrypt_to_local' => ['privates', 'console.command.secrets_decrypt_to_local', 'getConsole_Command_SecretsDecryptToLocalService', true],
            'console.command.secrets_encrypt_from_local' => ['privates', 'console.command.secrets_encrypt_from_local', 'getConsole_Command_SecretsEncryptFromLocalService', true],
            'cache.app.taggable' => ['privates', 'cache.app.taggable', 'getCache_App_TaggableService', true],
            'cache.asset_mapper' => ['privates', 'cache.asset_mapper', 'getCache_AssetMapperService', false],
            'cache.default_marshaller' => ['privates', 'cache.default_marshaller', 'getCache_DefaultMarshallerService', true],
            'cache.default_clearer' => ['services', 'cache.app_clearer', 'getCache_AppClearerService', true],
            'test.client.history' => [false, 'test.client.history', 'getTest_Client_HistoryService', true],
            'test.client.cookiejar' => [false, 'test.client.cookiejar', 'getTest_Client_CookiejarService', true],
            'assets.packages' => ['services', 'public.assets.packages', 'getPublic_Assets_PackagesService', true],
            'assets.context' => ['privates', 'assets.context', 'getAssets_ContextService', true],
            'assets.empty_version_strategy' => ['privates', 'assets.empty_version_strategy', 'getAssets_EmptyVersionStrategyService', true],
            'asset_mapper' => ['privates', 'asset_mapper', 'getAssetMapperService', false],
            'asset_mapper.cached_mapped_asset_factory' => ['privates', 'asset_mapper.cached_mapped_asset_factory', 'getAssetMapper_CachedMappedAssetFactoryService', false],
            'asset_mapper.repository' => ['privates', 'asset_mapper.repository', 'getAssetMapper_RepositoryService', false],
            'asset_mapper.public_assets_path_resolver' => ['privates', 'asset_mapper.public_assets_path_resolver', 'getAssetMapper_PublicAssetsPathResolverService', false],
            'asset_mapper.asset_package' => ['privates', 'asset_mapper.asset_package', 'getAssetMapper_AssetPackageService', true],
            'asset_mapper.dev_server_subscriber' => ['privates', 'asset_mapper.dev_server_subscriber', 'getAssetMapper_DevServerSubscriberService', false],
            'asset_mapper.command.compile' => ['privates', 'asset_mapper.command.compile', 'getAssetMapper_Command_CompileService', true],
            'asset_mapper.command.debug' => ['privates', 'asset_mapper.command.debug', 'getAssetMapper_Command_DebugService', true],
            'asset_mapper_compiler' => ['privates', 'asset_mapper_compiler', 'getAssetMapperCompilerService', false],
            'asset_mapper.compiler.css_asset_url_compiler' => ['privates', 'asset_mapper.compiler.css_asset_url_compiler', 'getAssetMapper_Compiler_CssAssetUrlCompilerService', true],
            'asset_mapper.compiler.source_mapping_urls_compiler' => ['privates', 'asset_mapper.compiler.source_mapping_urls_compiler', 'getAssetMapper_Compiler_SourceMappingUrlsCompilerService', true],
            'asset_mapper.compiler.javascript_import_path_compiler' => ['privates', 'asset_mapper.compiler.javascript_import_path_compiler', 'getAssetMapper_Compiler_JavascriptImportPathCompilerService', true],
            'asset_mapper.importmap.config_reader' => ['privates', 'asset_mapper.importmap.config_reader', 'getAssetMapper_Importmap_ConfigReaderService', true],
            'asset_mapper.importmap.manager' => ['privates', 'asset_mapper.importmap.manager', 'getAssetMapper_Importmap_ManagerService', true],
            'asset_mapper.importmap.remote_package_downloader' => ['privates', 'asset_mapper.importmap.remote_package_downloader', 'getAssetMapper_Importmap_RemotePackageDownloaderService', true],
            'asset_mapper.importmap.resolver' => ['privates', 'asset_mapper.importmap.resolver', 'getAssetMapper_Importmap_ResolverService', true],
            'asset_mapper.importmap.auditor' => ['privates', 'asset_mapper.importmap.auditor', 'getAssetMapper_Importmap_AuditorService', true],
            'asset_mapper.importmap.update_checker' => ['privates', 'asset_mapper.importmap.update_checker', 'getAssetMapper_Importmap_UpdateCheckerService', true],
            'asset_mapper.importmap.command.require' => ['privates', 'asset_mapper.importmap.command.require', 'getAssetMapper_Importmap_Command_RequireService', true],
            'asset_mapper.importmap.command.remove' => ['privates', 'asset_mapper.importmap.command.remove', 'getAssetMapper_Importmap_Command_RemoveService', true],
            'asset_mapper.importmap.command.update' => ['privates', 'asset_mapper.importmap.command.update', 'getAssetMapper_Importmap_Command_UpdateService', true],
            'asset_mapper.importmap.command.install' => ['privates', 'asset_mapper.importmap.command.install', 'getAssetMapper_Importmap_Command_InstallService', true],
            'asset_mapper.importmap.command.audit' => ['privates', 'asset_mapper.importmap.command.audit', 'getAssetMapper_Importmap_Command_AuditService', true],
            'asset_mapper.importmap.command.outdated' => ['privates', 'asset_mapper.importmap.command.outdated', 'getAssetMapper_Importmap_Command_OutdatedService', true],
            'http_client.transport' => ['privates', 'http_client.transport', 'getHttpClient_TransportService', true],
            'http_client.uri_template' => ['privates', 'http_client.uri_template', 'getHttpClient_UriTemplateService', true],
            'debug.debug_handlers_listener' => ['privates', 'debug.debug_handlers_listener', 'getDebug_DebugHandlersListenerService', false],
            'debug.file_link_formatter' => ['privates', 'debug.file_link_formatter', 'getDebug_FileLinkFormatterService', true],
            'debug.stopwatch' => ['privates', 'debug.stopwatch', 'getDebug_StopwatchService', false],
            'debug.event_dispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'debug.controller_resolver' => ['privates', 'debug.controller_resolver', 'getDebug_ControllerResolverService', false],
            'debug.argument_resolver' => ['privates', 'debug.argument_resolver', 'getDebug_ArgumentResolverService', false],
            'argument_resolver.not_tagged_controller' => ['privates', 'argument_resolver.not_tagged_controller', 'getArgumentResolver_NotTaggedControllerService', true],
            'secrets.vault' => ['privates', 'secrets.vault', 'getSecrets_VaultService', true],
            'secrets.decryption_key' => ['privates', 'secrets.decryption_key', 'getSecrets_DecryptionKeyService', true],
            'secrets.local_vault' => ['privates', 'secrets.local_vault', 'getSecrets_LocalVaultService', true],
            'http_client.uri_template.inner' => ['privates', 'http_client.uri_template.inner', 'getHttpClient_UriTemplate_InnerService', true],
            'asset_mapper.cached_mapped_asset_factory.inner' => ['privates', 'asset_mapper.cached_mapped_asset_factory.inner', 'getAssetMapper_CachedMappedAssetFactory_InnerService', false],
            'asset_mapper.asset_package.inner' => ['privates', 'asset_mapper.asset_package.inner', 'getAssetMapper_AssetPackage_InnerService', true],
            'debug.event_dispatcher.inner' => ['privates', 'debug.event_dispatcher.inner', 'getDebug_EventDispatcher_InnerService', false],
            'debug.controller_resolver.inner' => ['privates', 'debug.controller_resolver.inner', 'getDebug_ControllerResolver_InnerService', false],
            'debug.argument_resolver.inner' => ['privates', 'debug.argument_resolver.inner', 'getDebug_ArgumentResolver_InnerService', false],
            'Symfony\\Component\\EventDispatcher\\EventDispatcherInterface' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'Psr\\EventDispatcher\\EventDispatcherInterface' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'Symfony\\Component\\HttpKernel\\HttpKernelInterface' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'Symfony\\Component\\HttpFoundation\\RequestStack' => ['services', 'request_stack', 'getRequestStackService', false],
            'Symfony\\Component\\HttpKernel\\KernelInterface' => ['services', 'kernel', 'getKernelService', true],
            'Symfony\\Component\\Filesystem\\Filesystem' => ['privates', 'filesystem', 'getFilesystemService', true],
            'Symfony\\Component\\String\\Slugger\\SluggerInterface' => ['privates', 'slugger', 'getSluggerService', true],
            'Symfony\\Component\\Clock\\ClockInterface' => ['privates', 'clock', 'getClockService', true],
            'Psr\\Clock\\ClockInterface' => ['privates', 'clock', 'getClockService', true],
            'error_renderer.html' => ['privates', 'error_handler.error_renderer.html', 'getErrorHandler_ErrorRenderer_HtmlService', true],
            'error_renderer' => ['privates', 'error_handler.error_renderer.html', 'getErrorHandler_ErrorRenderer_HtmlService', true],
            'Psr\\Cache\\CacheItemPoolInterface' => ['services', 'cache.app', 'getCache_AppService', true],
            'Symfony\\Contracts\\Cache\\CacheInterface' => ['services', 'cache.app', 'getCache_AppService', true],
            'Symfony\\Contracts\\Cache\\TagAwareCacheInterface' => ['privates', 'cache.app.taggable', 'getCache_App_TaggableService', true],
            'Symfony\\Component\\Asset\\Packages' => ['services', 'public.assets.packages', 'getPublic_Assets_PackagesService', true],
            'Symfony\\Component\\AssetMapper\\AssetMapperInterface' => ['privates', 'asset_mapper', 'getAssetMapperService', false],
            'Symfony\\Component\\AssetMapper\\ImportMap\\ImportMapManager' => ['privates', 'asset_mapper.importmap.manager', 'getAssetMapper_Importmap_ManagerService', true],
            'Symfony\\Contracts\\HttpClient\\HttpClientInterface' => ['privates', 'http_client.uri_template', 'getHttpClient_UriTemplateService', true],
            'Symfony\\Component\\HttpKernel\\Debug\\FileLinkFormatter' => ['privates', 'debug.file_link_formatter', 'getDebug_FileLinkFormatterService', true],
            'Symfony\\Component\\Stopwatch\\Stopwatch' => ['privates', 'debug.stopwatch', 'getDebug_StopwatchService', false],
            'argument_resolver.controller_locator' => ['privates', '.service_locator.Xbsa8iG', 'get_ServiceLocator_Xbsa8iGService', true],
            'Psr\\Log\\LoggerInterface' => ['privates', 'logger', 'getLoggerService', false],
            'http_client' => ['privates', 'http_client.uri_template', 'getHttpClient_UriTemplateService', true],
            'asset_mapper.mapped_asset_factory' => ['privates', 'asset_mapper.cached_mapped_asset_factory', 'getAssetMapper_CachedMappedAssetFactoryService', false],
            'assets._default_package' => ['privates', 'asset_mapper.asset_package', 'getAssetMapper_AssetPackageService', true],
            'controller_resolver' => ['privates', 'debug.controller_resolver', 'getDebug_ControllerResolverService', false],
            'argument_resolver' => ['privates', 'debug.argument_resolver', 'getDebug_ArgumentResolverService', false],
        ], [
            'logger' => '?',
            'argument_metadata_factory' => '?',
            'argument_resolver.backed_enum_resolver' => '?',
            'argument_resolver.datetime' => '?',
            'argument_resolver.request_attribute' => '?',
            'argument_resolver.request' => '?',
            'argument_resolver.session' => '?',
            'argument_resolver.service' => '?',
            'argument_resolver.default' => '?',
            'argument_resolver.variadic' => '?',
            'argument_resolver.query_parameter_value_resolver' => '?',
            'response_listener' => '?',
            'locale_listener' => '?',
            'validate_request_listener' => '?',
            'disallow_search_engine_index_response_listener' => '?',
            'exception_listener' => '?',
            'controller.cache_attribute_listener' => '?',
            'cache_clearer' => '?',
            'filesystem' => '?',
            'locale_aware_listener' => '?',
            'container.env_var_processor' => '?',
            'slugger' => '?',
            'container.getenv' => '?',
            'config_builder.warmer' => '?',
            'clock' => '?',
            'error_handler.error_renderer.html' => '?',
            'console.error_listener' => '?',
            'console.suggest_missing_package_subscriber' => '?',
            'console.command.about' => '?',
            'console.command.assets_install' => '?',
            'console.command.cache_clear' => '?',
            'console.command.cache_pool_clear' => '?',
            'console.command.cache_pool_prune' => '?',
            'console.command.cache_pool_invalidate_tags' => '?',
            'console.command.cache_pool_delete' => '?',
            'console.command.cache_pool_list' => '?',
            'console.command.cache_warmup' => '?',
            'console.command.config_debug' => '?',
            'console.command.config_dump_reference' => '?',
            'console.command.container_debug' => '?',
            'console.command.container_lint' => '?',
            'console.command.debug_autowiring' => '?',
            'console.command.dotenv_debug' => '?',
            'console.command.event_dispatcher_debug' => '?',
            'console.command.xliff_lint' => '?',
            'console.command.yaml_lint' => '?',
            'console.command.secrets_set' => '?',
            'console.command.secrets_remove' => '?',
            'console.command.secrets_generate_key' => '?',
            'console.command.secrets_list' => '?',
            'console.command.secrets_decrypt_to_local' => '?',
            'console.command.secrets_encrypt_from_local' => '?',
            'cache.app.taggable' => '?',
            'cache.asset_mapper' => '?',
            'cache.default_marshaller' => '?',
            'cache.default_clearer' => '?',
            'test.client.history' => '?',
            'test.client.cookiejar' => '?',
            'assets.packages' => '?',
            'assets.context' => '?',
            'assets.empty_version_strategy' => '?',
            'asset_mapper' => '?',
            'asset_mapper.cached_mapped_asset_factory' => '?',
            'asset_mapper.repository' => '?',
            'asset_mapper.public_assets_path_resolver' => '?',
            'asset_mapper.asset_package' => '?',
            'asset_mapper.dev_server_subscriber' => '?',
            'asset_mapper.command.compile' => '?',
            'asset_mapper.command.debug' => '?',
            'asset_mapper_compiler' => '?',
            'asset_mapper.compiler.css_asset_url_compiler' => '?',
            'asset_mapper.compiler.source_mapping_urls_compiler' => '?',
            'asset_mapper.compiler.javascript_import_path_compiler' => '?',
            'asset_mapper.importmap.config_reader' => '?',
            'asset_mapper.importmap.manager' => '?',
            'asset_mapper.importmap.remote_package_downloader' => '?',
            'asset_mapper.importmap.resolver' => '?',
            'asset_mapper.importmap.auditor' => '?',
            'asset_mapper.importmap.update_checker' => '?',
            'asset_mapper.importmap.command.require' => '?',
            'asset_mapper.importmap.command.remove' => '?',
            'asset_mapper.importmap.command.update' => '?',
            'asset_mapper.importmap.command.install' => '?',
            'asset_mapper.importmap.command.audit' => '?',
            'asset_mapper.importmap.command.outdated' => '?',
            'http_client.transport' => '?',
            'http_client.uri_template' => '?',
            'debug.debug_handlers_listener' => '?',
            'debug.file_link_formatter' => '?',
            'debug.stopwatch' => '?',
            'debug.event_dispatcher' => '?',
            'debug.controller_resolver' => '?',
            'debug.argument_resolver' => '?',
            'argument_resolver.not_tagged_controller' => '?',
            'secrets.vault' => '?',
            'secrets.decryption_key' => '?',
            'secrets.local_vault' => '?',
            'http_client.uri_template.inner' => '?',
            'asset_mapper.cached_mapped_asset_factory.inner' => '?',
            'asset_mapper.asset_package.inner' => '?',
            'debug.event_dispatcher.inner' => '?',
            'debug.controller_resolver.inner' => '?',
            'debug.argument_resolver.inner' => '?',
            'Symfony\\Component\\EventDispatcher\\EventDispatcherInterface' => '?',
            'Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface' => '?',
            'Psr\\EventDispatcher\\EventDispatcherInterface' => '?',
            'Symfony\\Component\\HttpKernel\\HttpKernelInterface' => '?',
            'Symfony\\Component\\HttpFoundation\\RequestStack' => '?',
            'Symfony\\Component\\HttpKernel\\KernelInterface' => '?',
            'Symfony\\Component\\Filesystem\\Filesystem' => '?',
            'Symfony\\Component\\String\\Slugger\\SluggerInterface' => '?',
            'Symfony\\Component\\Clock\\ClockInterface' => '?',
            'Psr\\Clock\\ClockInterface' => '?',
            'error_renderer.html' => '?',
            'error_renderer' => '?',
            'Psr\\Cache\\CacheItemPoolInterface' => '?',
            'Symfony\\Contracts\\Cache\\CacheInterface' => '?',
            'Symfony\\Contracts\\Cache\\TagAwareCacheInterface' => '?',
            'Symfony\\Component\\Asset\\Packages' => '?',
            'Symfony\\Component\\AssetMapper\\AssetMapperInterface' => '?',
            'Symfony\\Component\\AssetMapper\\ImportMap\\ImportMapManager' => '?',
            'Symfony\\Contracts\\HttpClient\\HttpClientInterface' => '?',
            'Symfony\\Component\\HttpKernel\\Debug\\FileLinkFormatter' => '?',
            'Symfony\\Component\\Stopwatch\\Stopwatch' => '?',
            'argument_resolver.controller_locator' => '?',
            'Psr\\Log\\LoggerInterface' => '?',
            'http_client' => '?',
            'asset_mapper.mapped_asset_factory' => '?',
            'assets._default_package' => '?',
            'controller_resolver' => '?',
            'argument_resolver' => '?',
        ]);
    }
}
