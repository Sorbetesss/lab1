<?xml version="1.0" ?>

<container xmlns="http://symphony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symphony.com/schema/dic/services http://symphony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <defaults public="false" />

        <service id="lock.store.flock" class="Symphony\Component\Lock\Store\FlockStore" />

        <service id="lock.store.semaphore" class="Symphony\Component\Lock\Store\SemaphoreStore" />

        <service id="lock.store.memcached.abstract" class="Symphony\Component\Lock\Store\MemcachedStore" abstract="true">
            <argument /> <!-- Memcached connection service -->
        </service>

        <service id="lock.store.redis.abstract" class="Symphony\Component\Lock\Store\RedisStore" abstract="true">
            <argument /> <!-- Redis connection service -->
        </service>

        <service id="lock.store.combined.abstract" class="Symphony\Component\Lock\Store\CombinedStore" abstract="true">
            <argument /> <!-- List of stores -->
            <argument type="service" id="lock.strategy.majority" /> <!-- Strategy -->
        </service>

        <service id="lock.strategy.majority" class="Symphony\Component\Lock\Strategy\ConsensusStrategy" />

        <service id="lock.factory.abstract" class="Symphony\Component\Lock\Factory" abstract="true">
            <tag name="monolog.logger" channel="lock" />
            <argument /> <!-- Store -->
            <call method="setLogger">
                <argument type="service" id="logger" on-invalid="ignore" />
            </call>
        </service>

    </services>
</container>
