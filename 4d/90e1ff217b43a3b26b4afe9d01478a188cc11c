---------------------------------------------------------------------------

by carsonbot at 2023-04-12T12:29:47Z

Hey!

I see that this is your first PR. That is great! Welcome!

Symfony has a [contribution guide](https://symfony.com/doc/current/contributing/index.html) which I suggest you to read.

In short:
- Always add tests
- Keep backward compatibility (see https://symfony.com/bc).
- Bug fixes must be submitted against the lowest maintained branch where they apply (see https://symfony.com/releases)
- Features and deprecations must be submitted against the 6.3 branch.

Review the GitHub status checks of your pull request and try to solve the reported issues. If some tests are failing, try to see if they are failing because of this change.

When two Symfony core team members approve this change, it will be merged and you will become an official Symfony contributor!
If this PR is merged in a lower version branch, it will be merged up to all maintained branches within a few days.

I am going to sit back now and wait for the reviews.

Cheers!

Carsonbot

---------------------------------------------------------------------------

by alexandre-lass at 2023-04-12T13:54:33Z

@stof i updated the branch with your feedback, thanks

---------------------------------------------------------------------------

by stof at 2023-04-13T15:26:40Z

What are those `phpunit.stdout` files that you committed ?

---------------------------------------------------------------------------

by alexandre-lass at 2023-04-13T15:28:28Z

> What are those `phpunit.stdout` files that you committed ?

I pushed it by error, it's now clear

---------------------------------------------------------------------------

by alexandre-lass at 2023-04-13T15:31:26Z

@stof I added a commit for updating the `expected-missing-return-types.diff` file

---------------------------------------------------------------------------

by alexandre-lass at 2023-04-13T15:52:40Z

@stof i see an error on `src/Symfony/Component/HttpKernel/DataCollector/DumpDataCollector::dump` who is returning void and implementing `DataDumperInterface`.
Do you think i can safely update his return type ?
