---------------------------------------------------------------------------

by carsonbot at 2024-01-31T16:02:36Z

Hey!

I see that this is your first PR. That is great! Welcome!

Symfony has a [contribution guide](https://symfony.com/doc/current/contributing/index.html) which I suggest you to read.

In short:
- Always add tests
- Keep backward compatibility (see https://symfony.com/bc).
- Bug fixes must be submitted against the lowest maintained branch where they apply (see https://symfony.com/releases)
- Features and deprecations must be submitted against the 7.1 branch.

Review the GitHub status checks of your pull request and try to solve the reported issues. If some tests are failing, try to see if they are failing because of this change.

When two Symfony core team members approve this change, it will be merged and you will become an official Symfony contributor!
If this PR is merged in a lower version branch, it will be merged up to all maintained branches within a few days.

I am going to sit back now and wait for the reviews.

Cheers!

Carsonbot

---------------------------------------------------------------------------

by carsonbot at 2024-01-31T16:02:38Z

Hey!

Thanks for your PR. You are targeting branch "5.4" but it seems your PR description refers to branch "5.4 for bug fixes".
Could you update the PR description or change target branch? This helps core maintainers a lot.

Cheers!

Carsonbot

---------------------------------------------------------------------------

by stof at 2024-01-31T17:12:58Z

the signature for the method is saying `string|null` as values for shortcuts. `false` has never been a value covered by our contract (and it is a TypeError in Symfony 6.4 and 7).

So -1 for that PR. You should instead fix the code to properly use `null` or an empty string to represent the absence of shortcut.

---------------------------------------------------------------------------

by nicolas-grekas at 2024-02-01T08:06:54Z

We used to use `empty()` on this line so it's fair to me to not break existing behaviors, especially when `bool` is allowed by the signature.

I'm fine with the change but a test case would be nice.

---------------------------------------------------------------------------

by derrabus at 2024-02-01T08:18:48Z

I'm also fine with this change, if we ignore it on the merge-up to 6.4.

---------------------------------------------------------------------------

by jayminsilicon at 2024-02-01T08:58:11Z

@derrabus Yes, that would be helpful for everyone who was using 5.4 as stable version for their repo.

---------------------------------------------------------------------------

by stof at 2024-02-01T10:42:15Z

Well, as things were working before (due to implementation details), I'm OK patching that in 5.4, but I'm not OK up-merging it to 6.4 where `false` is a TypeError.
And maybe we should trigger a deprecation when passing `false`.

---------------------------------------------------------------------------

by derrabus at 2024-02-01T10:46:29Z

@jayminsilicon Can you add a test for your scenario ~~and look into @stof's proposal of triggering a deprecation~~?

---------------------------------------------------------------------------

by nicolas-grekas at 2024-02-01T10:47:59Z

No new deprecations on 5.4, our policies don't allow it (as they don't allow new features on older branches)

---------------------------------------------------------------------------

by derrabus at 2024-02-01T10:50:45Z

Okay, so only a test then. ðŸ™‚

---------------------------------------------------------------------------

by jayminsilicon at 2024-02-01T12:41:25Z

@stof @derrabus Testcase added in PR. Now all should good to merge this PR.
