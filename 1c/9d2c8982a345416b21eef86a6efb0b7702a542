---------------------------------------------------------------------------

by carsonbot at 2021-01-18T10:13:49Z

Hey!

I see that this is your first PR. That is great! Welcome!

Symfony has a [contribution guide](https://symfony.com/doc/current/contributing/index.html) which I suggest you to read.

In short:
- Always add tests
- Keep backward compatibility (see https://symfony.com/bc).
- Bug fixes must be submitted against the lowest maintained branch where they apply (see https://symfony.com/releases)
- Features and deprecations must be submitted against the 5.x branch.

Review the GitHub status checks of your pull request and try to solve the reported issues. If some tests are failing, try to see if they are failing because of this change.

When two Symfony core team members approve this change, it will be merged and you will become an official Symfony contributor!
If this PR is merged in a lower version branch, it will be merged up to all maintained branches within a few days.

I am going to sit back now and wait for the reviews.

Cheers!

Carsonbot

---------------------------------------------------------------------------

by OskarStark at 2021-01-18T19:47:43Z

![CleanShot 2021-01-18 at 20 46 33](https://user-images.githubusercontent.com/995707/104957339-42930b00-59ce-11eb-9cd8-1c1f6943fb28.png)

It looks like your Committer email is not associated with your Github account.

Could it be so easy to check if a `/` is present in the message and decide upon that how to create the signature? 🤔

---------------------------------------------------------------------------

by fabpot at 2021-01-19T07:43:02Z

@OneT0uch Are you working on a fix?

---------------------------------------------------------------------------

by OneT0uch at 2021-01-19T07:54:12Z

> @OneT0uch Are you working on a fix?

@fabpot I opened the PR just to show the issue as asked but i don't know how to fix.

---------------------------------------------------------------------------

by fabpot at 2021-01-19T08:13:17Z

Then I think we are going to close as the core team is not able to fix provider issues. The only to get a fix is by users of the providers. You can also ping the various contributors (especially the one who submitted the provider in the first place) if they can help.

---------------------------------------------------------------------------

by OskarStark at 2021-01-19T08:15:32Z

I will have a detailed look 👍

---------------------------------------------------------------------------

by OneT0uch at 2021-01-19T08:21:54Z

@OskarStark Can't we just remove the unescaped slashes flag? Do you know why we need it?

---------------------------------------------------------------------------

by OskarStark at 2021-01-19T08:32:21Z

I think not, based on their official PHP client they use it too:
https://github.com/ovh/php-ovh/blob/c473b3d67e5757c188b10e3048aba1ec43133653/src/Api.php#L267-L303

It would be maybe you can open an issue in their repo how they handle your case or if they have a recommendation 🤔

Can you ping me on the symfony slack ?

---------------------------------------------------------------------------

by OskarStark at 2021-01-19T08:49:38Z

Can you please try to apply the following diff in this PR and see if the tests pass?
```diff
diff --git a/src/Symfony/Component/Notifier/Bridge/OvhCloud/OvhCloudTransport.php b/src/Symfony/Component/Notifier/Bridge/OvhCloud/OvhCloudTransport.php
index 4d737019c3..a6f41bc6b3 100644
--- a/src/Symfony/Component/Notifier/Bridge/OvhCloud/OvhCloudTransport.php
+++ b/src/Symfony/Component/Notifier/Bridge/OvhCloud/OvhCloudTransport.php
@@ -76,7 +76,13 @@ final class OvhCloudTransport extends AbstractTransport
         $headers['X-Ovh-Application'] = $this->applicationKey;
         $headers['X-Ovh-Timestamp'] = $now;

-        $toSign = $this->applicationSecret.'+'.$this->consumerKey.'+POST+'.$endpoint.'+'.json_encode($content, \JSON_UNESCAPED_SLASHES).'+'.$now;
+        if (false !== strpos($message->getSubject(), '/')) {
+            $body = json_encode($content);
+        } else {
+            $body = json_encode($content, \JSON_UNESCAPED_SLASHES);
+        }
+
+        $toSign = $this->applicationSecret.'+'.$this->consumerKey.'+POST+'.$endpoint.'+'.$body.'+'.$now;
         $headers['X-Ovh-Consumer'] = $this->consumerKey;
         $headers['X-Ovh-Signature'] = '$1$'.sha1($toSign);
```

---------------------------------------------------------------------------

by OneT0uch at 2021-01-19T09:07:58Z

> Can you please try to apply the following diff in this PR and see if the tests pass?
>
> ```diff
> diff --git a/src/Symfony/Component/Notifier/Bridge/OvhCloud/OvhCloudTransport.php b/src/Symfony/Component/Notifier/Bridge/OvhCloud/OvhCloudTransport.php
> index 4d737019c3..a6f41bc6b3 100644
> --- a/src/Symfony/Component/Notifier/Bridge/OvhCloud/OvhCloudTransport.php
> +++ b/src/Symfony/Component/Notifier/Bridge/OvhCloud/OvhCloudTransport.php
> @@ -76,7 +76,13 @@ final class OvhCloudTransport extends AbstractTransport
>          $headers['X-Ovh-Application'] = $this->applicationKey;
>          $headers['X-Ovh-Timestamp'] = $now;
>
> -        $toSign = $this->applicationSecret.'+'.$this->consumerKey.'+POST+'.$endpoint.'+'.json_encode($content, \JSON_UNESCAPED_SLASHES).'+'.$now;
> +        if (false !== strpos($message->getSubject(), '/')) {
> +            $body = json_encode($content);
> +        } else {
> +            $body = json_encode($content, \JSON_UNESCAPED_SLASHES);
> +        }
> +
> +        $toSign = $this->applicationSecret.'+'.$this->consumerKey.'+POST+'.$endpoint.'+'.$body.'+'.$now;
>          $headers['X-Ovh-Consumer'] = $this->consumerKey;
>          $headers['X-Ovh-Signature'] = '$1$'.sha1($toSign);
> ```

Your solution is working but i think it will be better to follow official sdk :
They apply flag on the body too (https://github.com/ovh/php-ovh/blob/c473b3d67e5757c188b10e3048aba1ec43133653/src/Api.php#L273)

```php
// Add Content type
$headers['Content-Type'] = 'application/json';

// Store json encode content
$body = json_encode($content, \JSON_UNESCAPED_SLASHES);

$toSign = $this->applicationSecret.'+'.$this->consumerKey.'+POST+'.$endpoint.'+'.$body.'+'.$now;
$response = $this->client->request('POST', $endpoint, [
           'headers' => $headers,
           'body' => $body, // Use it here
       ]);
```

---------------------------------------------------------------------------

by OskarStark at 2021-01-19T09:09:17Z

That makes sense, can you please change the code accordingly?
