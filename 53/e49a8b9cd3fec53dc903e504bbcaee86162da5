---------------------------------------------------------------------------

by carsonbot at 2021-12-03T16:05:15Z

Hey!

I see that this is your first PR. That is great! Welcome!

Symfony has a [contribution guide](https://symfony.com/doc/current/contributing/index.html) which I suggest you to read.

In short:
- Always add tests
- Keep backward compatibility (see https://symfony.com/bc).
- Bug fixes must be submitted against the lowest maintained branch where they apply (see https://symfony.com/releases)
- Features and deprecations must be submitted against the 6.1 branch.

Review the GitHub status checks of your pull request and try to solve the reported issues. If some tests are failing, try to see if they are failing because of this change.

When two Symfony core team members approve this change, it will be merged and you will become an official Symfony contributor!
If this PR is merged in a lower version branch, it will be merged up to all maintained branches within a few days.

I am going to sit back now and wait for the reviews.

Cheers!

Carsonbot

---------------------------------------------------------------------------

by stof at 2021-12-03T16:16:08Z

The PhpstanExtractor should support the phpstan pseudo-types

---------------------------------------------------------------------------

by EmilMassey at 2021-12-03T16:50:47Z

> The PhpstanExtractor should support the phpstan pseudo-types

I agree and it would be great if PropertyInfo supported all of PHPStan's types, but it is a very complex system with integer ranges, generics, complex array shapes, literals and constants etc. so it will need a lot of work to support them all. We can work on it in future PRs but I think it is too much for just one PR.

All pseudo-types that are currently supported by phpDocumentor are also valid PHPStan pseudo-types so it didn't make sense to me not to add them to `PhpstanExtractor`. It can already recognize `true`, `false` or `list` pseudo-types and my PR adds just some more to the list. I know it's incomplete but we can gradually add support for more types. At the moment the problem is that there's no such list with all pseudo-types recognized by the PHPStan and I'm sure there will be more and more types as the tool evolves dynamically.

---------------------------------------------------------------------------

by stof at 2021-12-03T17:07:43Z

@EmilMassey supporting the full type system might be too complex indeed. But you could at least support the full list of pseudo-types (i.e. also `negative-int`).
the phpdoc types are documented at https://phpstan.org/writing-php-code/phpdoc-types. And you can look at the source code in case the doc is incomplete: https://github.com/phpstan/phpstan-src/blob/c2ff0bd31327e861f651e55db364823cba0f0262/src/PhpDoc/TypeNodeResolver.php#L130

---------------------------------------------------------------------------

by EmilMassey at 2021-12-13T19:38:36Z

> The low-deps test failure looks related. Can you have a look?

Fixed, thanks

---------------------------------------------------------------------------

by derrabus at 2021-12-16T22:50:49Z

> Not sure: do we need to merge this as a bugfix on 5.4

The change is too heavy for a bugfix, imho.

> since we changed the default extractor, and not supporting theses types might break existing apps?

The PHPDoc extractor on 5.3 did not understand most pseudo-types either. See #44578.
